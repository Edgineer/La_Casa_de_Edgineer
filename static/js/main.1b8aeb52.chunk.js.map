{"version":3,"sources":["images/stadium.png","images/profile-circ.gif","styled-components/Wrapper.js","styled-components/HeaderStyle.js","styled-components/Profile.js","styled-components/Title.js","components/Header.js","styled-components/Footer.js","styled-components/Grid.js","styled-components/ButtonRow.js","styled-components/ButtonBoarder.js","styled-components/Button.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","body","_templateObject","stadium","HeaderStyle","div","HeaderStyle_templateObject","Profile","img","Profile_templateObject","Title","Title_templateObject","Header","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Fragment","styled_components_Profile","src","profilepic","alt","styled_components_HeaderStyle","styled_components_Title","React","Component","Footer","Footer_templateObject","Grid","table","Grid_templateObject","ButtonRow","tr","ButtonRow_templateObject","ButtonBoarder","td","ButtonBoarder_templateObject","left","right","Button","button","Button_templateObject","Home","styled_components_Wrapper","Header_Header","styled_components_Grid","styled_components_ButtonRow","styled_components_ButtonBoarder","styled_components_Button","href","target","styled_components_Footer","App","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qaCKxC,IAOeC,EAPCC,IAAOC,KAAVC,IACeC,gPCF5B,IASeC,EATKJ,IAAOK,IAAVC,2KCAjB,IAQeC,EARCP,IAAOQ,IAAVC,qNCAb,IAQeC,EARDV,IAAOK,IAAVM,sBCEUC,cACjB,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACTH,0EAIN,OACIO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAD,CAASC,IAAKC,IAAYC,IAAI,gBAC9BP,EAAAC,EAAAC,cAACM,EAAD,oBACAR,EAAAC,EAAAC,cAACO,EAAD,mCACAT,EAAAC,EAAAC,cAACO,EAAD,gDAXoBC,IAAMC,0RCF1C,IAUeC,EAVAhC,IAAOK,IAAV4B,kHCAZ,IAKeC,EALFlC,IAAOmC,MAAVC,mJCAV,IAMeC,EANGrC,IAAOsC,GAAVC,sOCAf,IASeC,EATOxC,IAAOyC,GAAVC,IACD,SAAA7B,GAAK,OAAKA,EAAM8B,KAAO9B,EAAM8B,KAAO9B,EAAM+B,qaCD5D,IAkBeC,EAlBA7C,IAAO8C,OAAVC,KCKSC,cACjB,SAAAA,EAAYnC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAAlC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KACTH,0EAIN,OACIO,EAAAC,EAAAC,cAAC2B,EAAD,KACA7B,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAC6B,EAAD,KACA/B,EAAAC,EAAAC,cAAC8B,EAAD,KACIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAeV,KAAK,QACpBvB,EAAAC,EAAAC,cAACgC,EAAD,kBAEAlC,EAAAC,EAAAC,cAAC+B,EAAD,CAAeT,MAAM,SACrBxB,EAAAC,EAAAC,cAACgC,EAAD,oBAGJlC,EAAAC,EAAAC,cAAC8B,EAAD,KACIhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAeV,KAAK,QACpBvB,EAAAC,EAAAC,cAAA,KAAGiC,KAAK,sCAAsCC,OAAO,UACrDpC,EAAAC,EAAAC,cAACgC,EAAD,iBAGAlC,EAAAC,EAAAC,cAAC+B,EAAD,CAAeT,MAAM,SACrBxB,EAAAC,EAAAC,cAACgC,EAAD,qBAIJlC,EAAAC,EAAAC,cAACmC,EAAD,iEA7BsB3B,IAAMC,WCNnB2B,cACnB,SAAAA,EAAY7C,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,GAAA5C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KACXH,0EAIN,OACEO,EAAAC,EAAAC,cAACqC,EAAD,aAP2B7B,IAAMC,WCSnB6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1b8aeb52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stadium.d12afb57.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-circ.e40a6394.gif\";","import styled from 'styled-components';\r\nimport stadium from '../images/stadium.png';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Wrapper = styled.body`\r\n    background-image: url(${stadium});\r\n    background-repeat:no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nexport default Wrapper;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst HeaderStyle = styled.div`\r\n    text-align: center;\r\n    font-family: Karla, Helvetica, sans-serif;\r\n    font-size: 56px;\r\n    font-weight: 700;\r\n    color: white;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nexport default HeaderStyle;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Profile = styled.img`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 10%;\r\n  height: 10%;\r\n`;\r\n\r\nexport default Profile;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Title = styled.div`\r\n    text-align: center;\r\n    font-family: Karla, Helvetica, sans-serif;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    color: white;\r\n`;\r\n\r\nexport default Title;","import React from 'react';\r\nimport HeaderStyle from '../styled-components/HeaderStyle';\r\nimport Profile from \"../styled-components/Profile\";\r\nimport Title from '../styled-components/Title';\r\nimport profilepic from \"../images/profile-circ.gif\";\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile src={profilepic} alt=\"Profile-pic\"/>\r\n                <HeaderStyle>Edgar Lopez</HeaderStyle>\r\n                <Title>Aspiring Software Engineer</Title>\r\n                <Title>UCLA Computer Science June 2020</Title>\r\n            </>\r\n        );\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Footer = styled.div`\r\n    background-color: rgb(211,211,211,0.8);\r\n    text-align: center;\r\n    font-family: Karla, Helvetica, sans-serif;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    width: 100%;\r\n    height: 50px;\r\n`;\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Grid = styled.table`\r\n    padding: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst ButtonRow = styled.tr`\r\n    width: 100%;\r\n    padding-top: 120px;\r\n    padding-bottom: 120px;\r\n`;\r\n\r\nexport default ButtonRow;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst ButtonBoarder = styled.td`\r\n    text-align: ${props => (props.left ? props.left : props.right)};\r\n    padding: 40px;\r\n    font-family: Karla, Helvetica, sans-serif;\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n    color: white;\r\n`;\r\n\r\nexport default ButtonBoarder;","import styled from 'styled-components';\r\n\r\n//This creates a div object with this css and it gets returned. It is now styled\r\n\r\nconst Button = styled.button`\r\n    font-family: Karla, Helvetica, sans-serif;\r\n    font-weight: 700;\r\n\r\n\r\n    background-color: transparent;\r\n    font-size: 24px;\r\n    border-radius: 21px;\r\n    padding: 32px 16px;\r\n    color: white;\r\n    text-align: center;\r\n    display: inline-block;\r\n    &:hover {\r\n    background-color: rgb(255,255,255,0.9);\r\n    color: black;\r\n    }\r\n`;\r\n\r\nexport default Button;","import React from 'react';\r\nimport Wrapper from '../styled-components/Wrapper';\r\nimport Header from './Header';\r\nimport Footer from '../styled-components/Footer';\r\nimport Grid from '../styled-components/Grid';\r\nimport ButtonRow from '../styled-components/ButtonRow';\r\nimport ButtonBoarder from '../styled-components/ButtonBoarder';\r\nimport Button from \"../styled-components/Button\";\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n            <Header></Header>\r\n            <Grid>\r\n            <ButtonRow>\r\n                <ButtonBoarder left=\"left\">\r\n                <Button>About Me</Button>\r\n                </ButtonBoarder>\r\n                <ButtonBoarder right=\"right\">\r\n                <Button>Portfolio</Button>\r\n                </ButtonBoarder>\r\n            </ButtonRow>\r\n            <ButtonRow>\r\n                <ButtonBoarder left=\"left\">\r\n                <a href='/../public/../elopez-swe-resume.pdf' target=\"_blank\">\r\n                <Button>Resume</Button>\r\n                </a>\r\n                </ButtonBoarder>\r\n                <ButtonBoarder right=\"right\">\r\n                <Button>Interests</Button>\r\n                </ButtonBoarder>\r\n            </ButtonRow>\r\n            </Grid>\r\n            <Footer>Here is where all the social media link icons go</Footer>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport Home from './components/Home';\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <Home></Home>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}